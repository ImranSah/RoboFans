{"version":3,"sources":["components/CardList.js","components/SearchBox.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","no","name","className","src","alt","SearchBox","field","onChange","style","marginBottom","App","fieldChange","event","setState","searchField","target","value","state","robots","fetch","then","resp","json","user","console","log","this","filterRobots","filter","ele","toLowerCase","includes","length","map","i","textAlign","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAaeA,EAXE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACtB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,aACpD,8BACE,6BAAKH,UCGEI,G,MAVG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,uBACEC,SAAUD,EACVJ,UAAU,wBACVM,MAAO,CAAEC,aAAa,YCkDbC,G,wDAhDb,aAAe,IAAD,8BACZ,gBAOFC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZC,YAAaF,EAAMG,OAAOC,SAR5B,EAAKC,MAAQ,CACXC,OAAQ,GACRJ,YAAa,IAJH,E,qDAcd,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAAKC,UAEbF,MAAK,SAACG,GACL,EAAKV,SAAS,CAAEK,OAAQK,IACxBC,QAAQC,IAAIF,Q,oBAIlB,WACE,MAAgCG,KAAKT,MAA7BC,EAAR,EAAQA,OAAQJ,EAAhB,EAAgBA,YAEVa,EAAeT,EAAOU,QAAO,SAACC,GAClC,OAAOA,EAAI5B,KAAK6B,cAAcC,SAASjB,EAAYgB,kBAGrD,OAAQH,EAAaK,OAGnB,sBAAK9B,UAAU,KAAf,UACE,6BAA6B,IAAxByB,EAAaK,OAAe,mBAAqB,aACtD,cAAC,EAAD,CAAW1B,MAAOoB,KAAKf,cACvB,qBAAKT,UAAU,YAAf,SACGyB,EAAaM,KAAI,SAACJ,EAAKK,GACtB,OAAO,cAAC,EAAD,CAAkBlC,GAAI6B,EAAI5B,KAAMA,KAAM4B,EAAI5B,MAA3BiC,WAP5B,oBAAI1B,MAAO,CAAE2B,UAAU,UAAvB,6B,GAlCYC,IAAMC,YCMTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2ca3766a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst CardList = ({ no, name }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${no}?200x200`} alt=\"Robofans\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","const SearchBox = ({ field }) => {\r\n  return (\r\n    <input\r\n      onChange={field}\r\n      className=\"bg-light-green pa2 ba\"\r\n      style={{ marginBottom: `20px` }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport tachyons from \"tachyons\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport \"./app.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  fieldChange = (event) => {\r\n    this.setState({\r\n      searchField: event.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((user) => {\r\n        this.setState({ robots: user });\r\n        console.log(user);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n\r\n    const filterRobots = robots.filter((ele) => {\r\n      return ele.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n\r\n    return !filterRobots.length ? (\r\n      <h1 style={{ textAlign: `center` }}>Loading....</h1>\r\n    ) : (\r\n      <div className=\"tc\">\r\n        <h1>{filterRobots.length === 0 ? \"No Record Found!\" : \"RoboFans\"}</h1>\r\n        <SearchBox field={this.fieldChange} />\r\n        <div className=\"container\">\r\n          {filterRobots.map((ele, i) => {\r\n            return <CardList key={i} no={ele.name} name={ele.name} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}